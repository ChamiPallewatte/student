{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CrudService = /*#__PURE__*/(() => {\n  class CrudService {\n    constructor(http, url) {\n      this.http = http;\n      this.url = url;\n    }\n\n    get(params) {\n      return this.http.get(this.url, {\n        params\n      }).pipe(take(1));\n    }\n\n    getOne(id, params) {\n      return this.http.get(`${this.url}/${id}`, {\n        params\n      }).pipe(take(1));\n    }\n\n    post(body, params) {\n      delete body.id;\n      return this.http.post(this.url, body, {\n        params\n      }).pipe(take(1));\n    }\n\n    put(body, params) {\n      const id = body.id;\n      delete body.id;\n      return this.http.put(`${this.url}/${id}`, body, {\n        params\n      }).pipe(take(1));\n    }\n\n    delete(id, params) {\n      return this.http.delete(`${this.url}/${id}`, {\n        params\n      }).pipe(take(1));\n    }\n\n  }\n\n  CrudService.ɵfac = function CrudService_Factory(t) {\n    return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(String));\n  };\n\n  CrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudService,\n    factory: CrudService.ɵfac,\n    providedIn: 'root'\n  });\n  return CrudService;\n})();","map":null,"metadata":{},"sourceType":"module"}